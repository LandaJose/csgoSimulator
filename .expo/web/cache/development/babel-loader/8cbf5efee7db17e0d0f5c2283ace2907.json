{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Josel\\\\OneDrive\\\\Desktop\\\\csgoSimulator\\\\Screens\\\\SkinSearch.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { createDbTable, addToDb, fetchAllData, fetchSpecificData } from \"../DBConnection\";\nimport { useNavigation } from '@react-navigation/native';\n\nvar SkinSearch = function SkinSearch(props) {\n  var mountedRef = useRef(true);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      skinResults = _useState2[0],\n      setSkinResults = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      notFinished = _useState4[0],\n      setNotFinished = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchSkinName = _useState6[0],\n      setSearchSkinName = _useState6[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    var searchGuns = function searchGuns() {\n      var url, search, keys;\n      return _regeneratorRuntime.async(function searchGuns$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = Platform.OS === 'web' ? 'https://cors-anywhere.herokuapp.com/http://csgobackpack.net/api/GetItemsList/v2/?prettyprint=true' : 'http://csgobackpack.net/api/GetItemsList/v2/?prettyprint=true';\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                return data.items_list;\n              }));\n\n            case 3:\n              search = _context.sent;\n              keys = Object.keys(search);\n              keys.forEach(function (key, index) {\n                if (searchp[key].name.includes(\"AK-47\")) {\n                  addToDb(search[key].name, search[key].icon_url, search[key].rarity, search[key].exterior);\n                }\n              });\n              setNotFinished(false);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var afterFetchData = function afterFetchData(data) {\n      if (data === undefined || data.length == 0) {\n        searchGuns();\n      } else {\n        setNotFinished(false);\n      }\n    };\n\n    createDbTable();\n    fetchAllData(afterFetchData);\n  }, []);\n  useEffect(function () {\n    if (mountedRef.current) {\n      mountedRef.current = false;\n    } else {\n      navigation.navigate('SkinSearchResults', {\n        skinResults: skinResults\n      });\n    }\n  }, [skinResults]);\n\n  var searchHandler = function searchHandler(data) {\n    console.log(data);\n    var searchArray = [];\n\n    for (var index = 0; index < data.length; index++) {\n      searchArray.push(data[index]);\n    }\n\n    console.log(searchArray);\n    setSkinResults(searchArray);\n  };\n\n  return React.createElement(SafeAreaView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, props.children), React.createElement(TextInput, {\n    value: searchSkinName,\n    onChangeText: function onChangeText(text) {\n      return setSearchSkinName(text);\n    },\n    placeholder: \"Search Skin Name!\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Search\",\n    onPress: function onPress() {\n      if (searchSkinName.length < 3) {\n        alert(\"Enter 3 or more characters!\");\n      } else {\n        fetchSpecificData(searchSkinName, searchHandler);\n      }\n    },\n    disabled: notFinished,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default SkinSearch;","map":{"version":3,"sources":["C:/Users/Josel/OneDrive/Desktop/csgoSimulator/Screens/SkinSearch.js"],"names":["React","useState","useEffect","useRef","createDbTable","addToDb","fetchAllData","fetchSpecificData","useNavigation","SkinSearch","props","mountedRef","skinResults","setSkinResults","notFinished","setNotFinished","searchSkinName","setSearchSkinName","navigation","searchGuns","url","Platform","OS","fetch","then","response","json","data","items_list","search","keys","Object","forEach","key","index","searchp","name","includes","icon_url","rarity","exterior","afterFetchData","undefined","length","current","navigate","searchHandler","console","log","searchArray","push","children","text","alert"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport {SafeAreaView, Button, StyleSheet, Text, TextInput, Platform, RefreshControl} from 'react-native';\r\nimport {createDbTable, addToDb, fetchAllData, fetchSpecificData} from '../DBConnection'\r\n\r\n\r\nimport {useNavigation} from '@react-navigation/native' \r\n\r\n\r\nconst SkinSearch = props => {\r\n    const mountedRef = useRef(true)\r\n    const [skinResults, setSkinResults] = useState('')\r\n    const [notFinished, setNotFinished] = useState(true) // this is to ensure that the api call is finished before opening case\r\n    const [searchSkinName, setSearchSkinName] = useState('')\r\n\r\n    // const [refreshing, setRefreshing] = React.useState(false);\r\n    // setRefreshing(true);\r\n    // wait(2000).then(() => setRefreshing(false));\r\n\r\n    const navigation = useNavigation()\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const searchGuns = async() => {\r\n            let url = Platform.OS === 'web' ? 'https://cors-anywhere.herokuapp.com/http://csgobackpack.net/api/GetItemsList/v2/?prettyprint=true' : 'http://csgobackpack.net/api/GetItemsList/v2/?prettyprint=true'\r\n            /*  **** VISIT THIS SITE TO GET TEMP ACCESS SO THAT WE ARE ABLE TO ACCESS CSGO BACKPACK: https://cors-anywhere.herokuapp.com/**** */\r\n            //https://cors-anywhere.herokuapp.com/\r\n             let search = await fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => data.items_list)\r\n            \r\n            const keys = Object.keys(search)\r\n\r\n            keys.forEach((key, index)=> {\r\n                if(searchp[key].name.includes(\"AK-47\")){\r\n                    addToDb(search[key].name, search[key].icon_url, search[key].rarity, search[key].exterior)\r\n                }\r\n            })\r\n            \r\n        \r\n\r\n            setNotFinished(false);\r\n        }\r\n\r\n        const afterFetchData = (data) => {\r\n            if(data === undefined || data.length == 0){\r\n                searchGuns();\r\n            }else{\r\n                setNotFinished(false);\r\n            }\r\n        }\r\n\r\n        createDbTable();\r\n        fetchAllData(afterFetchData);\r\n            \r\n    },[]) // only run ONCE\r\n\r\n    useEffect(() => {\r\n        if (mountedRef.current){\r\n            mountedRef.current = false\r\n        }\r\n        else{\r\n            navigation.navigate('SkinSearchResults', {skinResults: skinResults});\r\n        }\r\n    },[skinResults])\r\n\r\n\r\n    const searchHandler = (data) => {\r\n        console.log(data)\r\n        let searchArray = [];\r\n        for (let index = 0; index < data.length; index++) {\r\n            searchArray.push(data[index])\r\n        }\r\n        console.log(searchArray)\r\n        setSkinResults(searchArray)\r\n    }\r\n    return(\r\n        <SafeAreaView> \r\n            <Text>{props.children}</Text>\r\n            <TextInput \r\n            value = {searchSkinName}\r\n            onChangeText = {(text) => setSearchSkinName(text)}\r\n            placeholder = \"Search Skin Name!\"/>\r\n            <Button title=\"Search\" onPress={() => {\r\n                if(searchSkinName.length < 3){\r\n                    alert(\"Enter 3 or more characters!\")\r\n                }else{\r\n                    fetchSpecificData(searchSkinName, searchHandler);\r\n                }\r\n                \r\n                }}\r\n                disabled = {notFinished} />\r\n\r\n        </SafeAreaView>\r\n        \r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default SkinSearch;\r\n"]},"metadata":{},"sourceType":"module"}