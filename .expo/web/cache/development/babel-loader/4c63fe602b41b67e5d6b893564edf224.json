{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Repos\\\\csgoSimulator\\\\Screens\\\\Home.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar Home = function Home(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      PhoenixGuns = _useState2[0],\n      setPhoenixGuns = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      notFinished = _useState4[0],\n      setNotFinished = _useState4[1];\n\n  useEffect(function () {\n    var searchGuns = function searchGuns() {\n      var search, guns;\n      return _regeneratorRuntime.async(function searchGuns$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"http://csgobackpack.net/api/GetItemsList/v2/?prettyprint=true\").then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                return data.items_list;\n              }));\n\n            case 2:\n              search = _context.sent;\n              guns = keys();\n              guns.forEach(function (element) {\n                PhoenixGuns.push(search[element]);\n              });\n              setNotFinished(false);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    searchGuns();\n  }, []);\n  return React.createElement(SafeAreaView, {\n    style: {\n      alignItems: \"center\",\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.navigation.navigate(\"Display Weapons\", {\n        guns: weaponsDisplayReturn(PhoenixGuns)\n      });\n    },\n    disabled: notFinished,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: 'https://steamcommunity-a.akamaihd.net/economy/image/-9a81dlWLwJ2UUGcVs_nsVtzdOEdtWwKGZZLQHTxDZ7I56KU0Zwwo4NUX4oFJZEHLbXU5A1PIYQNqhpOSV-fRPasw8rsUFJ5KBFZv668FFUuh6qZJmlD7tiyl4OIlaGhYuLTzjhVupJ12urH89ii3lHlqEdoMDr2I5jVLFFSv_J2Rg/256fx256f'\n    },\n    style: style.caseImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  })), React.createElement(Button, {\n    disabled: notFinished,\n    onPress: function onPress() {\n      return props.navigation.navigate(\"Random Gun\", {\n        gun: randomizer(PhoenixGuns)\n      });\n    },\n    title: \"Open Case\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar randomizer = function randomizer(guns) {\n  var chanceStatTrak = Math.random() * 100 + 1;\n  var gunRarityChance = Math.random() * 100 + 1;\n  var gunRarity = \"\";\n  var isStatTrack = false;\n  var listOfWeapons = [];\n\n  if (gunRarityChance < 79.92) {\n    gunRarity = 'Mil-Spec Grade';\n  } else if (gunRarityChance < 95.9) {\n    gunRarity = 'Restricted';\n  } else if (gunRarityChance < 99.1) {\n    gunRarity = 'Classified';\n  } else {\n    gunRarity = 'Covert';\n  }\n\n  if (chanceStatTrak < 10) {\n    isStatTrack = true;\n  }\n\n  guns.forEach(function (element) {\n    if (element.rarity === gunRarity && isStatTrack === element.name.includes('StatTrak')) {\n      listOfWeapons.push(element);\n    }\n  });\n  var randomGun = Math.floor(Math.random() * listOfWeapons.length);\n  return listOfWeapons[randomGun];\n};\n\nvar weaponsDisplayReturn = function weaponsDisplayReturn(guns) {\n  var index = [0, 8, 22, 32, 36, 44, 51, 76, 81, 90, 61, 93, 99, 114, 118];\n  var gunsDisplay = [];\n  index.forEach(function (element) {\n    gunsDisplay.push(guns[element]);\n  });\n  return gunsDisplay;\n};\n\nvar style = StyleSheet.create({\n  caseImage: {\n    width: 225,\n    height: 225\n  }\n});\n\nvar keys = function keys() {\n  var x = ['MAG-7 | Heaven Guard (Factory New)', 'MAG-7 | Heaven Guard (Field-Tested)', 'MAG-7 | Heaven Guard (Minimal Wear)', 'MAG-7 | Heaven Guard (Well-Worn)', \"StatTrak\\u2122 MAG-7 | Heaven Guard (Factory New)\", \"StatTrak\\u2122 MAG-7 | Heaven Guard (Field-Tested)\", \"StatTrak\\u2122 MAG-7 | Heaven Guard (Minimal Wear)\", \"StatTrak\\u2122 MAG-7 | Heaven Guard (Well-Worn)\", 'Negev | Terrain (Factory New)', 'Negev | Terrain (Field-Tested)', 'Negev | Terrain (Minimal Wear)', 'Negev | Terrain (Well-Worn)', \"StatTrak\\u2122 Negev | Terrain (Factory New)\", \"StatTrak\\u2122 Negev | Terrain (Field-Tested)\", \"StatTrak\\u2122 Negev | Terrain (Minimal Wear)\", \"StatTrak\\u2122 Negev | Terrain (Well-Worn)\", \"StatTrak\\u2122 UMP-45 | Corporal (Battle-Scarred)\", \"StatTrak\\u2122 UMP-45 | Corporal (Factory New)\", \"StatTrak\\u2122 UMP-45 | Corporal (Field-Tested)\", \"StatTrak\\u2122 UMP-45 | Corporal (Minimal Wear)\", \"StatTrak\\u2122 UMP-45 | Corporal (Well-Worn)\", 'UMP-45 | Corporal (Battle-Scarred)', 'UMP-45 | Corporal (Factory New)', 'UMP-45 | Corporal (Field-Tested)', 'UMP-45 | Corporal (Minimal Wear)', 'UMP-45 | Corporal (Well-Worn)', \"StatTrak\\u2122 Tec-9 | Sandstorm (Battle-Scarred)\", \"StatTrak\\u2122 Tec-9 | Sandstorm (Field-Tested)\", \"StatTrak\\u2122 Tec-9 | Sandstorm (Minimal Wear)\", \"StatTrak\\u2122 Tec-9 | Sandstorm (Well-Worn)\", 'Tec-9 | Sandstorm (Battle-Scarred)', 'Tec-9 | Sandstorm (Field-Tested)', 'Tec-9 | Sandstorm (Minimal Wear)', 'Tec-9 | Sandstorm (Well-Worn)', 'FAMAS | Sergeant (Battle-Scarred)', 'FAMAS | Sergeant (Field-Tested)', 'FAMAS | Sergeant (Minimal Wear)', 'FAMAS | Sergeant (Well-Worn)', \"StatTrak\\u2122 FAMAS | Sergeant (Battle-Scarred)\", \"StatTrak\\u2122 FAMAS | Sergeant (Field-Tested)\", \"StatTrak\\u2122 FAMAS | Sergeant (Minimal Wear)\", \"StatTrak\\u2122 FAMAS | Sergeant (Well-Worn)\", 'SG 553 | Pulse (Battle-Scarred)', 'SG 553 | Pulse (Field-Tested)', 'SG 553 | Pulse (Minimal Wear)', 'SG 553 | Pulse (Well-Worn)', \"StatTrak\\u2122 SG 553 | Pulse (Battle-Scarred)\", \"StatTrak\\u2122 SG 553 | Pulse (Field-Tested)\", \"StatTrak\\u2122 SG 553 | Pulse (Minimal Wear)\", \"StatTrak\\u2122 SG 553 | Pulse (Well-Worn)\", 'MAC-10 | Heat (Battle-Scarred)', 'MAC-10 | Heat (Factory New)', 'MAC-10 | Heat (Field-Tested)', 'MAC-10 | Heat (Minimal Wear)', 'MAC-10 | Heat (Well-Worn)', \"StatTrak\\u2122 MAC-10 | Heat (Battle-Scarred)\", \"StatTrak\\u2122 MAC-10 | Heat (Factory New)\", \"StatTrak\\u2122 MAC-10 | Heat (Field-Tested)\", \"StatTrak\\u2122 MAC-10 | Heat (Minimal Wear)\", \"StatTrak\\u2122 MAC-10 | Heat (Well-Worn)\", 'AUG | Chameleon (Battle-Scarred)', 'AUG | Chameleon (Factory New)', 'AUG | Chameleon (Field-Tested)', 'AUG | Chameleon (Minimal Wear)', 'AUG | Chameleon (Well-Worn)', \"StatTrak\\u2122 AUG | Chameleon (Battle-Scarred)\", \"StatTrak\\u2122 AUG | Chameleon (Factory New)\", \"StatTrak\\u2122 AUG | Chameleon (Field-Tested)\", \"StatTrak\\u2122 AUG | Chameleon (Minimal Wear)\", \"StatTrak\\u2122 AUG | Chameleon (Well-Worn)\", \"StatTrak\\u2122 P90 | Trigon (Battle-Scarred)\", \"StatTrak\\u2122 P90 | Trigon (Field-Tested)\", \"StatTrak\\u2122 P90 | Trigon (Minimal Wear)\", \"StatTrak\\u2122 P90 | Trigon (Well-Worn)\", 'P90 | Trigon (Battle-Scarred)', 'P90 | Trigon (Field-Tested)', 'P90 | Trigon (Minimal Wear)', 'P90 | Trigon (Well-Worn)', \"StatTrak\\u2122 Nova | Antique (Factory New)\", \"StatTrak\\u2122 Nova | Antique (Field-Tested)\", \"StatTrak\\u2122 Nova | Antique (Minimal Wear)\", 'Nova | Antique (Factory New)', 'Nova | Antique (Field-Tested)', 'Nova | Antique (Minimal Wear)', \"StatTrak\\u2122 AK-47 | Redline (Battle-Scarred)\", \"StatTrak\\u2122 AK-47 | Redline (Field-Tested)\", \"StatTrak\\u2122 AK-47 | Redline (Minimal Wear)\", \"StatTrak\\u2122 AK-47 | Redline (Well-Worn)\", 'AK-47 | Redline (Battle-Scarred)', 'AK-47 | Redline (Field-Tested)', 'AK-47 | Redline (Minimal Wear)', 'AK-47 | Redline (Well-Worn)', 'AWP | Asiimov (Battle-Scarred)', 'AWP | Asiimov (Field-Tested)', 'AWP | Asiimov (Well-Worn)', \"StatTrak\\u2122 AWP | Asiimov (Battle-Scarred)\", \"StatTrak\\u2122 AWP | Asiimov (Field-Tested)\", \"StatTrak\\u2122 AWP | Asiimov (Well-Worn)\", \"\\u2605 Bayonet | Ultraviolet (Battle-Scarred)\", \"\\u2605 Bayonet | Ultraviolet (Factory New)\", \"\\u2605 Bayonet | Ultraviolet (Field-Tested)\", \"\\u2605 Bayonet | Ultraviolet (Minimal Wear)\", \"\\u2605 Bayonet | Ultraviolet (Well-Worn)\", \"\\u2605 StatTrak\\u2122 Bayonet | Ultraviolet (Battle-Scarred)\", \"\\u2605 StatTrak\\u2122 Bayonet | Ultraviolet (Factory New)\", \"\\u2605 StatTrak\\u2122 Bayonet | Ultraviolet (Field-Tested)\", \"\\u2605 StatTrak\\u2122 Bayonet | Ultraviolet (Minimal Wear)\", \"\\u2605 StatTrak\\u2122 Bayonet | Ultraviolet (Well-Worn)\", \"\\u2605 StatTrak\\u2122 Bayonet | Night (Battle-Scarred)\", \"\\u2605 StatTrak\\u2122 Bayonet | Night (Factory New)\", \"\\u2605 StatTrak\\u2122 Bayonet | Night (Field-Tested)\", \"\\u2605 StatTrak\\u2122 Bayonet | Night (Minimal Wear)\", \"\\u2605 StatTrak\\u2122 Bayonet | Night (Well-Worn)\", \"\\u2605 Bayonet | Night (Battle-Scarred)\", \"\\u2605 Bayonet | Night (Factory New)\", \"\\u2605 Bayonet | Night (Field-Tested)\", \"\\u2605 Bayonet | Night (Minimal Wear)\", \"\\u2605 Bayonet | Night (Well-Worn)\", \"\\u2605 Bayonet | Tiger Tooth (Factory New)\", \"\\u2605 Bayonet | Tiger Tooth (Minimal Wear)\", \"\\u2605 StatTrak\\u2122 Bayonet | Tiger Tooth (Factory New)\", \"\\u2605 StatTrak\\u2122 Bayonet | Tiger Tooth (Minimal Wear)\"];\n  return x;\n};\n\nexport default Home;","map":{"version":3,"sources":["F:/Repos/csgoSimulator/Screens/Home.js"],"names":["React","useState","useEffect","Home","props","PhoenixGuns","setPhoenixGuns","notFinished","setNotFinished","searchGuns","fetch","then","response","json","data","items_list","search","guns","keys","forEach","element","push","alignItems","backgroundColor","navigation","navigate","weaponsDisplayReturn","uri","style","caseImage","gun","randomizer","chanceStatTrak","Math","random","gunRarityChance","gunRarity","isStatTrack","listOfWeapons","rarity","name","includes","randomGun","floor","length","index","gunsDisplay","StyleSheet","create","width","height","x"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {SafeAreaView, TouchableOpacity ,Image, Button, StyleSheet} from 'react-native';\r\nconst Home = props => {\r\n    const [PhoenixGuns, setPhoenixGuns] = useState([]); // list of guns in Phoenix Case\r\n    const [notFinished, setNotFinished] = useState(true); // this is to ensure that the api call is finished before opening case\r\n    useEffect(() => {\r\n        const searchGuns = async() => {\r\n             let search = await fetch(`http://csgobackpack.net/api/GetItemsList/v2/?prettyprint=true`)\r\n            .then(response => response.json())\r\n            .then(data => data.items_list)\r\n            let guns = keys() // all the keys for the guns\r\n            guns.forEach(element => {\r\n                PhoenixGuns.push(search[element])\r\n            });\r\n            setNotFinished(false);\r\n        }\r\n        searchGuns()\r\n    },[]) // only run ONCE\r\n    return(\r\n        <SafeAreaView \r\n            style = {{alignItems: `center`, backgroundColor: 'white'}}>\r\n            <TouchableOpacity // when the image is clicked display possible weapons\r\n                onPress = {() => props.navigation.navigate(\"Display Weapons\", {guns: weaponsDisplayReturn(PhoenixGuns)})} // go to Display Weapons and transport over the weapons to display\r\n                disabled = {notFinished}>\r\n                <Image\r\n                    source = {{\r\n                        uri: 'https://steamcommunity-a.akamaihd.net/economy/image/-9a81dlWLwJ2UUGcVs_nsVtzdOEdtWwKGZZLQHTxDZ7I56KU0Zwwo4NUX4oFJZEHLbXU5A1PIYQNqhpOSV-fRPasw8rsUFJ5KBFZv668FFUuh6qZJmlD7tiyl4OIlaGhYuLTzjhVupJ12urH89ii3lHlqEdoMDr2I5jVLFFSv_J2Rg/256fx256f'\r\n                    }}\r\n                    style = {style.caseImage}\r\n                />\r\n             </TouchableOpacity>\r\n            <Button\r\n                disabled = {notFinished} // to prevent the button from being pressed before useEffect is finished\r\n                onPress = {() => props.navigation.navigate(\"Random Gun\", {gun: randomizer(PhoenixGuns)})}\r\n                title = 'Open Case'\r\n\r\n            />\r\n        </SafeAreaView>\r\n    )\r\n}\r\nconst randomizer = (guns) => {\r\n    let chanceStatTrak = (Math.random() * 100) + 1 // 1 to 100 if less than 10, is statTrak\r\n    let gunRarityChance = (Math.random() * 100) + 1\r\n    let gunRarity = \"\"\r\n    let isStatTrack = false\r\n    let listOfWeapons = []\r\n    if(gunRarityChance < 79.92) { // 79.92\r\n        gunRarity = 'Mil-Spec Grade'\r\n    }\r\n    else if (gunRarityChance < 95.9) { // 15.98\r\n        gunRarity = 'Restricted'\r\n    }\r\n    else if(gunRarityChance < 99.1) { // 3.2\r\n        gunRarity = 'Classified'\r\n    }\r\n    else {\r\n        gunRarity = 'Covert'\r\n    }\r\n    if(chanceStatTrak < 10) {\r\n        isStatTrack = true\r\n    }\r\n    guns.forEach(element => {\r\n        if(element.rarity === gunRarity && isStatTrack === element.name.includes('StatTrak')) { // if the rarity matches the name and isStatTracked\r\n            listOfWeapons.push(element)\r\n        }\r\n    });\r\n    let randomGun = Math.floor(Math.random() * listOfWeapons.length)\r\n    return listOfWeapons[randomGun]\r\n\r\n\r\n}\r\nconst weaponsDisplayReturn = (guns) => {\r\n    const index = [0,8,22,32,36,44,51,76,81,90,61,93,99,114,118] // all the indexs of guns list for display, 61 is in a odd place because of the rarity\r\n    let gunsDisplay = []; // this will contain the guns to display when clicking the image of the case \r\n    index.forEach(element => {\r\n        gunsDisplay.push(guns[element])\r\n    });\r\n    return gunsDisplay\r\n}\r\nconst style = StyleSheet.create({\r\n    caseImage: {\r\n        width: 225,\r\n        height: 225\r\n    }\r\n})\r\nconst keys = () => { // this was made because importing a text file doesnt work, libraries caused many problems\r\nlet x = ['MAG-7 | Heaven Guard (Factory New)', // 0\r\n    'MAG-7 | Heaven Guard (Field-Tested)',\r\n    'MAG-7 | Heaven Guard (Minimal Wear)',\r\n    'MAG-7 | Heaven Guard (Well-Worn)',\r\n    'StatTrak\\u2122 MAG-7 | Heaven Guard (Factory New)',\r\n    'StatTrak\\u2122 MAG-7 | Heaven Guard (Field-Tested)',\r\n    'StatTrak\\u2122 MAG-7 | Heaven Guard (Minimal Wear)',\r\n    'StatTrak\\u2122 MAG-7 | Heaven Guard (Well-Worn)',\r\n    'Negev | Terrain (Factory New)', // 8\r\n    'Negev | Terrain (Field-Tested)',\r\n    'Negev | Terrain (Minimal Wear)',\r\n    'Negev | Terrain (Well-Worn)',\r\n    'StatTrak\\u2122 Negev | Terrain (Factory New)',\r\n    'StatTrak\\u2122 Negev | Terrain (Field-Tested)',\r\n    'StatTrak\\u2122 Negev | Terrain (Minimal Wear)',\r\n    'StatTrak\\u2122 Negev | Terrain (Well-Worn)',\r\n    'StatTrak\\u2122 UMP-45 | Corporal (Battle-Scarred)',\r\n    'StatTrak\\u2122 UMP-45 | Corporal (Factory New)',\r\n    'StatTrak\\u2122 UMP-45 | Corporal (Field-Tested)',\r\n    'StatTrak\\u2122 UMP-45 | Corporal (Minimal Wear)',\r\n    'StatTrak\\u2122 UMP-45 | Corporal (Well-Worn)',\r\n    'UMP-45 | Corporal (Battle-Scarred)',\r\n    'UMP-45 | Corporal (Factory New)', // 22\r\n    'UMP-45 | Corporal (Field-Tested)',\r\n    'UMP-45 | Corporal (Minimal Wear)',\r\n    'UMP-45 | Corporal (Well-Worn)',\r\n    'StatTrak\\u2122 Tec-9 | Sandstorm (Battle-Scarred)',\r\n    'StatTrak\\u2122 Tec-9 | Sandstorm (Field-Tested)',\r\n    'StatTrak\\u2122 Tec-9 | Sandstorm (Minimal Wear)',\r\n    'StatTrak\\u2122 Tec-9 | Sandstorm (Well-Worn)',\r\n    'Tec-9 | Sandstorm (Battle-Scarred)',\r\n    'Tec-9 | Sandstorm (Field-Tested)',\r\n    'Tec-9 | Sandstorm (Minimal Wear)', // 32\r\n    'Tec-9 | Sandstorm (Well-Worn)',\r\n    'FAMAS | Sergeant (Battle-Scarred)',\r\n    'FAMAS | Sergeant (Field-Tested)',\r\n    'FAMAS | Sergeant (Minimal Wear)', // 36\r\n    'FAMAS | Sergeant (Well-Worn)',\r\n    'StatTrak\\u2122 FAMAS | Sergeant (Battle-Scarred)',\r\n    'StatTrak\\u2122 FAMAS | Sergeant (Field-Tested)',\r\n    'StatTrak\\u2122 FAMAS | Sergeant (Minimal Wear)',\r\n    'StatTrak\\u2122 FAMAS | Sergeant (Well-Worn)',\r\n    'SG 553 | Pulse (Battle-Scarred)',\r\n    'SG 553 | Pulse (Field-Tested)',\r\n    'SG 553 | Pulse (Minimal Wear)', // 44\r\n    'SG 553 | Pulse (Well-Worn)',\r\n    'StatTrak\\u2122 SG 553 | Pulse (Battle-Scarred)',\r\n    'StatTrak\\u2122 SG 553 | Pulse (Field-Tested)',\r\n    'StatTrak\\u2122 SG 553 | Pulse (Minimal Wear)',\r\n    'StatTrak\\u2122 SG 553 | Pulse (Well-Worn)',\r\n    'MAC-10 | Heat (Battle-Scarred)',\r\n    'MAC-10 | Heat (Factory New)', // 51\r\n    'MAC-10 | Heat (Field-Tested)',\r\n    'MAC-10 | Heat (Minimal Wear)',\r\n    'MAC-10 | Heat (Well-Worn)',\r\n    'StatTrak\\u2122 MAC-10 | Heat (Battle-Scarred)',\r\n    'StatTrak\\u2122 MAC-10 | Heat (Factory New)',\r\n    'StatTrak\\u2122 MAC-10 | Heat (Field-Tested)',\r\n    'StatTrak\\u2122 MAC-10 | Heat (Minimal Wear)',\r\n    'StatTrak\\u2122 MAC-10 | Heat (Well-Worn)',\r\n    'AUG | Chameleon (Battle-Scarred)',\r\n    'AUG | Chameleon (Factory New)', // 61\r\n    'AUG | Chameleon (Field-Tested)',\r\n    'AUG | Chameleon (Minimal Wear)',\r\n    'AUG | Chameleon (Well-Worn)',\r\n    'StatTrak\\u2122 AUG | Chameleon (Battle-Scarred)',\r\n    'StatTrak\\u2122 AUG | Chameleon (Factory New)',\r\n    'StatTrak\\u2122 AUG | Chameleon (Field-Tested)',\r\n    'StatTrak\\u2122 AUG | Chameleon (Minimal Wear)',\r\n    'StatTrak\\u2122 AUG | Chameleon (Well-Worn)',\r\n    'StatTrak\\u2122 P90 | Trigon (Battle-Scarred)',\r\n    'StatTrak\\u2122 P90 | Trigon (Field-Tested)',\r\n    'StatTrak\\u2122 P90 | Trigon (Minimal Wear)',\r\n    'StatTrak\\u2122 P90 | Trigon (Well-Worn)',\r\n    'P90 | Trigon (Battle-Scarred)',\r\n    'P90 | Trigon (Field-Tested)',\r\n    'P90 | Trigon (Minimal Wear)', // 76\r\n    'P90 | Trigon (Well-Worn)',\r\n    'StatTrak\\u2122 Nova | Antique (Factory New)',\r\n    'StatTrak\\u2122 Nova | Antique (Field-Tested)',\r\n    'StatTrak\\u2122 Nova | Antique (Minimal Wear)',\r\n    'Nova | Antique (Factory New)', // 81\r\n    'Nova | Antique (Field-Tested)',\r\n    'Nova | Antique (Minimal Wear)',\r\n    'StatTrak\\u2122 AK-47 | Redline (Battle-Scarred)',\r\n    'StatTrak\\u2122 AK-47 | Redline (Field-Tested)',\r\n    'StatTrak\\u2122 AK-47 | Redline (Minimal Wear)',\r\n    'StatTrak\\u2122 AK-47 | Redline (Well-Worn)',\r\n    'AK-47 | Redline (Battle-Scarred)',\r\n    'AK-47 | Redline (Field-Tested)',\r\n    'AK-47 | Redline (Minimal Wear)', // 90\r\n    'AK-47 | Redline (Well-Worn)',\r\n    'AWP | Asiimov (Battle-Scarred)',\r\n    'AWP | Asiimov (Field-Tested)', // 93\r\n    'AWP | Asiimov (Well-Worn)',\r\n    'StatTrak\\u2122 AWP | Asiimov (Battle-Scarred)',\r\n    'StatTrak\\u2122 AWP | Asiimov (Field-Tested)',\r\n    'StatTrak\\u2122 AWP | Asiimov (Well-Worn)',\r\n    '\\u2605 Bayonet | Ultraviolet (Battle-Scarred)',\r\n    '\\u2605 Bayonet | Ultraviolet (Factory New)',// 99\r\n    '\\u2605 Bayonet | Ultraviolet (Field-Tested)',\r\n    '\\u2605 Bayonet | Ultraviolet (Minimal Wear)',\r\n    '\\u2605 Bayonet | Ultraviolet (Well-Worn)',\r\n    '\\u2605 StatTrak\\u2122 Bayonet | Ultraviolet (Battle-Scarred)',\r\n    '\\u2605 StatTrak\\u2122 Bayonet | Ultraviolet (Factory New)',\r\n    '\\u2605 StatTrak\\u2122 Bayonet | Ultraviolet (Field-Tested)',\r\n    '\\u2605 StatTrak\\u2122 Bayonet | Ultraviolet (Minimal Wear)',\r\n    '\\u2605 StatTrak\\u2122 Bayonet | Ultraviolet (Well-Worn)',\r\n    '\\u2605 StatTrak\\u2122 Bayonet | Night (Battle-Scarred)',\r\n    '\\u2605 StatTrak\\u2122 Bayonet | Night (Factory New)',\r\n    '\\u2605 StatTrak\\u2122 Bayonet | Night (Field-Tested)',\r\n    '\\u2605 StatTrak\\u2122 Bayonet | Night (Minimal Wear)',\r\n    '\\u2605 StatTrak\\u2122 Bayonet | Night (Well-Worn)',\r\n    '\\u2605 Bayonet | Night (Battle-Scarred)',\r\n    '\\u2605 Bayonet | Night (Factory New)', // 114\r\n    '\\u2605 Bayonet | Night (Field-Tested)',\r\n    '\\u2605 Bayonet | Night (Minimal Wear)',\r\n    '\\u2605 Bayonet | Night (Well-Worn)',\r\n    '\\u2605 Bayonet | Tiger Tooth (Factory New)', // 118\r\n    '\\u2605 Bayonet | Tiger Tooth (Minimal Wear)',\r\n    '\\u2605 StatTrak\\u2122 Bayonet | Tiger Tooth (Factory New)',\r\n    '\\u2605 StatTrak\\u2122 Bayonet | Tiger Tooth (Minimal Wear)']\r\n    return x;\r\n}\r\nexport default Home;\r\n//import PhoenixCaseGuns from '../Guns/PhoenixCaseGuns'"]},"metadata":{},"sourceType":"module"}