{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Josel\\\\OneDrive\\\\Desktop\\\\csgoSimulator\\\\Screens\\\\SkinSearch.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { addToDb, fetchAllData } from \"../DBConnection\";\nimport { gunsList } from \"../Components/Guns\";\n\nvar SkinSearch = function SkinSearch(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      skins = _useState2[0],\n      setSkins = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      notFinished = _useState4[0],\n      setNotFinished = _useState4[1];\n\n  useEffect(function () {\n    var searchGuns = function searchGuns() {\n      var search, guns;\n      return _regeneratorRuntime.async(function searchGuns$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('https://cors-anywhere.herokuapp.com/http://csgobackpack.net/api/GetItemsList/v2/?prettyprint=true').then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                return data.items_list;\n              }));\n\n            case 2:\n              search = _context.sent;\n              guns = keys();\n              guns.forEach(function (element) {\n                console.log(search[element]);\n                addToDb(search[element].name, search[element].icon_url, search[element].rarity, search[element].exterior);\n              });\n              setNotFinished(true);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    searchGuns();\n  }, []);\n\n  var keys = function keys() {\n    var x = gunsList;\n    return x;\n  };\n\n  return React.createElement(SafeAreaView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, props.children), React.createElement(TextInput, {\n    placeholder: setNotFinished ? \"Disabled\" : \"Enabled\",\n    editable: setNotFinished,\n    selectTextOnFocus: setNotFinished,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default SkinSearch;","map":{"version":3,"sources":["C:/Users/Josel/OneDrive/Desktop/csgoSimulator/Screens/SkinSearch.js"],"names":["React","useState","useEffect","addToDb","fetchAllData","gunsList","SkinSearch","props","skins","setSkins","notFinished","setNotFinished","searchGuns","fetch","then","response","json","data","items_list","search","guns","keys","forEach","element","console","log","name","icon_url","rarity","exterior","x","children"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;AAEA,SAAQC,OAAR,EAAiBC,YAAjB;AACA,SAAQC,QAAR;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AAAA,kBACEN,QAAQ,CAAC,EAAD,CADV;AAAA;AAAA,MACjBO,KADiB;AAAA,MACVC,QADU;;AAAA,mBAEcR,QAAQ,CAAC,KAAD,CAFtB;AAAA;AAAA,MAEjBS,WAFiB;AAAA,MAEJC,cAFI;;AAKxBT,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMU,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEKC,KAAK,CAAC,mGAAD,CAAL,CACnBC,IADmB,CACd,UAAAC,QAAQ;AAAA,uBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,eADM,EAEnBF,IAFmB,CAEd,UAAAG,IAAI;AAAA,uBAAIA,IAAI,CAACC,UAAT;AAAA,eAFU,CAFL;;AAAA;AAEVC,cAAAA,MAFU;AAKXC,cAAAA,IALW,GAKJC,IAAI,EALA;AAMfD,cAAAA,IAAI,CAACE,OAAL,CAAa,UAAAC,OAAO,EAAI;AAEpBC,gBAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACI,OAAD,CAAlB;AACApB,gBAAAA,OAAO,CAACgB,MAAM,CAACI,OAAD,CAAN,CAAgBG,IAAjB,EAAuBP,MAAM,CAACI,OAAD,CAAN,CAAgBI,QAAvC,EAAiDR,MAAM,CAACI,OAAD,CAAN,CAAgBK,MAAjE,EAAyET,MAAM,CAACI,OAAD,CAAN,CAAgBM,QAAzF,CAAP;AACH,eAJD;AAKAlB,cAAAA,cAAc,CAAC,IAAD,CAAd;;AAXe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAnB;;AAaAC,IAAAA,UAAU;AACb,GAfQ,EAeP,EAfO,CAAT;;AAiBA,MAAMS,IAAI,GAAG,SAAPA,IAAO,GAAM;AACf,QAAIS,CAAC,GAAGzB,QAAR;AACI,WAAOyB,CAAP;AACH,GAHL;;AAKA,SACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOvB,KAAK,CAACwB,QAAb,CADJ,EAEI,oBAAC,SAAD;AACA,IAAA,WAAW,EAAIpB,cAAc,GAAG,UAAH,GAAe,SAD5C;AAEA,IAAA,QAAQ,EAAEA,cAFV;AAGA,IAAA,iBAAiB,EAAEA,cAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAWH,CAtCD;;AA0CA,eAAeL,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {SafeAreaView, TouchableOpacity ,Image, Button, StyleSheet, Text, TextInput} from 'react-native';\r\nimport {addToDb, fetchAllData} from '../DBConnection'\r\nimport {gunsList} from '../Components/Guns'\r\n\r\n\r\nconst SkinSearch = props => {\r\n    const [skins, setSkins] = useState('');\r\n    const [notFinished, setNotFinished] = useState(false); // this is to ensure that the api call is finished before opening case\r\n\r\n\r\n    useEffect(() => {\r\n        const searchGuns = async() => {\r\n            /*  **** VISIT THIS SITE TO GET TEMP ACCESS SO THAT WE ARE ABLE TO ACCESS CSGO BACKPACK: https://cors-anywhere.herokuapp.com/**** */\r\n             let search = await fetch('https://cors-anywhere.herokuapp.com/http://csgobackpack.net/api/GetItemsList/v2/?prettyprint=true')\r\n            .then(response => response.json())\r\n            .then(data => data.items_list)\r\n            let guns = keys() // all the keys for the guns\r\n            guns.forEach(element => {\r\n                //PhoenixGuns.push(search[element])\r\n                console.log(search[element])\r\n                addToDb(search[element].name, search[element].icon_url, search[element].rarity, search[element].exterior)\r\n            });\r\n            setNotFinished(true);\r\n        }\r\n        searchGuns()\r\n    },[]) // only run ONCE\r\n\r\n    const keys = () => { // this was made because importing a text file doesnt work, libraries caused many problems **EDIT guns moved to seperate file**\r\n        let x = gunsList\r\n            return x;\r\n        }\r\n\r\n    return(\r\n        <SafeAreaView> \r\n            <Text>{props.children}</Text>\r\n            <TextInput \r\n            placeholder = {setNotFinished ? \"Disabled\": \"Enabled\" }\r\n            editable={setNotFinished}\r\n            selectTextOnFocus={setNotFinished}/>\r\n        </SafeAreaView>\r\n        \r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default SkinSearch;\r\n\r\n// import {gunsList} from '../Components/Guns'\r\n// const Home = props => {\r\n//     const [PhoenixGuns, setPhoenixGuns] = useState([]); // list of guns in Phoenix Case\r\n//     const [notFinished, setNotFinished] = useState(true); // this is to ensure that the api call is finished before opening case\r\n//     useEffect(() => {\r\n//         const searchGuns = async() => {\r\n//             /*  **** VISIT THIS SITE TO GET TEMP ACCESS SO THAT WE ARE ABLE TO ACCESS CSGO BACKPACK: https://cors-anywhere.herokuapp.com/**** */\r\n//              let search = await fetch('https://cors-anywhere.herokuapp.com/http://csgobackpack.net/api/GetItemsList/v2/?prettyprint=true')\r\n//             .then(response => response.json())\r\n//             .then(data => data.items_list)\r\n//             let guns = keys() // all the keys for the guns\r\n//             guns.forEach(element => {\r\n//                 PhoenixGuns.push(search[element])\r\n//             });\r\n//             setNotFinished(false);\r\n//         }\r\n//         searchGuns()\r\n//     },[]) // only run ONCE\r\n//     return(\r\n//         <SafeAreaView \r\n//             style = {{alignItems: `center`, backgroundColor: 'white'}}>\r\n//             <TouchableOpacity // when the image is clicked display possible weapons\r\n//                 onPress = {() => props.navigation.navigate(\"Display Weapons\", {guns: weaponsDisplayReturn(PhoenixGuns)})} // go to Display Weapons and transport over the weapons to display\r\n//                 disabled = {notFinished}>\r\n//                 <Image\r\n//                     source = {{\r\n//                         uri: 'https://steamcommunity-a.akamaihd.net/economy/image/-9a81dlWLwJ2UUGcVs_nsVtzdOEdtWwKGZZLQHTxDZ7I56KU0Zwwo4NUX4oFJZEHLbXU5A1PIYQNqhpOSV-fRPasw8rsUFJ5KBFZv668FFUuh6qZJmlD7tiyl4OIlaGhYuLTzjhVupJ12urH89ii3lHlqEdoMDr2I5jVLFFSv_J2Rg/256fx256f'\r\n//                     }}\r\n//                     style = {style.caseImage}\r\n//                 />\r\n//              </TouchableOpacity>\r\n//             <Button\r\n//                 disabled = {notFinished} // to prevent the button from being pressed before useEffect is finished\r\n//                 onPress = {() => props.navigation.navigate(\"Random Gun\", {gun: randomizer(PhoenixGuns)})}\r\n//                 title = 'Open Case'\r\n\r\n//             />\r\n//         </SafeAreaView>\r\n//     )\r\n// }"]},"metadata":{},"sourceType":"module"}