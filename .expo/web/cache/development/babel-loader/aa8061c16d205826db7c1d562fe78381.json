{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Josel\\\\OneDrive\\\\Desktop\\\\csgoSimulator\\\\Screens\\\\SkinSearch.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { createDbTable, addToDb, fetchAllData, fetchSpecificData } from \"../DBConnection\";\nimport { gunsList } from \"../Components/Guns\";\nimport { useNavigation } from '@react-navigation/native';\n\nvar SkinSearch = function SkinSearch(props) {\n  var mountedRef = useRef(true);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      skinResults = _useState2[0],\n      setSkinResults = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      notFinished = _useState4[0],\n      setNotFinished = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchSkinName = _useState6[0],\n      setSearchSkinName = _useState6[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    var searchGuns = function searchGuns() {\n      var search, keys;\n      return _regeneratorRuntime.async(function searchGuns$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"doing api shit\");\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch('https://cors-anywhere.herokuapp.com/http://csgobackpack.net/api/GetItemsList/v2/?prettyprint=true').then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                return data.items_list;\n              }));\n\n            case 3:\n              search = _context.sent;\n              keys = Object.keys(search);\n              keys.forEach(function (key, index) {\n                addToDb(search[key].name, search[key].icon_url, search[key].rarity, search[key].exterior);\n              });\n              setNotFinished(true);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var afterFetchData = function afterFetchData(data) {\n      console.log(data);\n\n      if (data === undefined || data.length == 0) {\n        searchGuns();\n      }\n    };\n\n    createDbTable();\n    fetchAllData(afterFetchData);\n  }, []);\n  useEffect(function () {\n    if (mountedRef.current) {\n      mountedRef.current = false;\n    } else {\n      navigation.navigate('SkinSearchResults', {\n        skinResults: skinResults\n      });\n    }\n  }, [skinResults]);\n\n  var keys = function keys() {\n    var x = gunsList;\n    return x;\n  };\n\n  var searchHandler = function searchHandler(data) {\n    var searchArray = [];\n\n    for (var index = 0; index < data.length; index++) {\n      searchArray.push(data[index]);\n    }\n\n    setSkinResults(searchArray);\n  };\n\n  return React.createElement(SafeAreaView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, props.children), React.createElement(TextInput, {\n    value: searchSkinName,\n    onChangeText: function onChangeText(text) {\n      return setSearchSkinName(text);\n    },\n    placeholder: \"Search Skin Name!\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Search\",\n    onPress: function onPress() {\n      fetchSpecificData(searchSkinName, searchHandler);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default SkinSearch;","map":{"version":3,"sources":["C:/Users/Josel/OneDrive/Desktop/csgoSimulator/Screens/SkinSearch.js"],"names":["React","useState","useEffect","useRef","createDbTable","addToDb","fetchAllData","fetchSpecificData","gunsList","useNavigation","SkinSearch","props","mountedRef","skinResults","setSkinResults","notFinished","setNotFinished","searchSkinName","setSearchSkinName","navigation","searchGuns","console","log","fetch","then","response","json","data","items_list","search","keys","Object","forEach","key","index","name","icon_url","rarity","exterior","afterFetchData","undefined","length","current","navigate","x","searchHandler","searchArray","push","children","text"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport {SafeAreaView, TouchableOpacity ,Image, Button, StyleSheet, Text, TextInput,} from 'react-native';\r\nimport {createDbTable, addToDb, fetchAllData, fetchSpecificData} from '../DBConnection'\r\nimport {gunsList} from '../Components/Guns'\r\n\r\nimport {useNavigation} from '@react-navigation/native' \r\n\r\n\r\nconst SkinSearch = props => {\r\n    const mountedRef = useRef(true)\r\n    const [skinResults, setSkinResults] = useState('')\r\n    const [notFinished, setNotFinished] = useState(false) // this is to ensure that the api call is finished before opening case\r\n    const [searchSkinName, setSearchSkinName] = useState('')\r\n\r\n    const navigation = useNavigation()\r\n\r\n    useEffect(() => {\r\n        const searchGuns = async() => {\r\n            console.log(\"doing api shit\");\r\n            /*  **** VISIT THIS SITE TO GET TEMP ACCESS SO THAT WE ARE ABLE TO ACCESS CSGO BACKPACK: https://cors-anywhere.herokuapp.com/**** */\r\n             let search = await fetch('https://cors-anywhere.herokuapp.com/http://csgobackpack.net/api/GetItemsList/v2/?prettyprint=true')\r\n            .then(response => response.json())\r\n            .then(data => data.items_list)\r\n            \r\n            const keys = Object.keys(search)\r\n\r\n            keys.forEach((key, index)=> {\r\n                addToDb(search[key].name, search[key].icon_url, search[key].rarity, search[key].exterior)\r\n            })\r\n            \r\n            \r\n            setNotFinished(true);\r\n        }\r\n\r\n        const afterFetchData = (data) => {\r\n            console.log(data);\r\n            if(data === undefined || data.length == 0){\r\n                searchGuns();\r\n            }\r\n        }\r\n\r\n        createDbTable();\r\n        fetchAllData(afterFetchData);\r\n            \r\n        //searchGuns()\r\n    },[]) // only run ONCE\r\n\r\n    useEffect(() => {\r\n        if (mountedRef.current){\r\n            mountedRef.current = false\r\n        }\r\n        else{\r\n            navigation.navigate('SkinSearchResults', {skinResults: skinResults});\r\n        }\r\n    },[skinResults])\r\n\r\n    const keys = () => { // this was made because importing a text file doesnt work, libraries caused many problems **EDIT guns moved to seperate file**\r\n        let x = gunsList\r\n            return x;\r\n        }\r\n\r\n    const searchHandler = (data) => {\r\n        //var rowArray = data.map.idx(function(row,i){return row.rows.item(i);}, r.rows)\r\n        let searchArray = [];\r\n        for (let index = 0; index < data.length; index++) {\r\n            searchArray.push(data[index])\r\n        }\r\n        //console.log(searchArray)\r\n        setSkinResults(searchArray)\r\n    }\r\n    return(\r\n        <SafeAreaView> \r\n            <Text>{props.children}</Text>\r\n            <TextInput \r\n            value = {searchSkinName}\r\n            onChangeText = {(text) => setSearchSkinName(text)}\r\n            placeholder = \"Search Skin Name!\"/>\r\n            <Button title=\"Search\" onPress={() => {\r\n                fetchSpecificData(searchSkinName, searchHandler);\r\n                }} />\r\n        </SafeAreaView>\r\n        \r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default SkinSearch;\r\n\r\n// import {gunsList} from '../Components/Guns'\r\n// const Home = props => {\r\n//     const [PhoenixGuns, setPhoenixGuns] = useState([]); // list of guns in Phoenix Case\r\n//     const [notFinished, setNotFinished] = useState(true); // this is to ensure that the api call is finished before opening case\r\n//     useEffect(() => {\r\n//         const searchGuns = async() => {\r\n//             /*  **** VISIT THIS SITE TO GET TEMP ACCESS SO THAT WE ARE ABLE TO ACCESS CSGO BACKPACK: https://cors-anywhere.herokuapp.com/**** */\r\n//              let search = await fetch('https://cors-anywhere.herokuapp.com/http://csgobackpack.net/api/GetItemsList/v2/?prettyprint=true')\r\n//             .then(response => response.json())\r\n//             .then(data => data.items_list)\r\n//             let guns = keys() // all the keys for the guns\r\n//             guns.forEach(element => {\r\n//                 PhoenixGuns.push(search[element])\r\n//             });\r\n//             setNotFinished(false);\r\n//         }\r\n//         searchGuns()\r\n//     },[]) // only run ONCE\r\n//     return(\r\n//         <SafeAreaView \r\n//             style = {{alignItems: `center`, backgroundColor: 'white'}}>\r\n//             <TouchableOpacity // when the image is clicked display possible weapons\r\n//                 onPress = {() => props.navigation.navigate(\"Display Weapons\", {guns: weaponsDisplayReturn(PhoenixGuns)})} // go to Display Weapons and transport over the weapons to display\r\n//                 disabled = {notFinished}>\r\n//                 <Image\r\n//                     source = {{\r\n//                         uri: 'https://steamcommunity-a.akamaihd.net/economy/image/-9a81dlWLwJ2UUGcVs_nsVtzdOEdtWwKGZZLQHTxDZ7I56KU0Zwwo4NUX4oFJZEHLbXU5A1PIYQNqhpOSV-fRPasw8rsUFJ5KBFZv668FFUuh6qZJmlD7tiyl4OIlaGhYuLTzjhVupJ12urH89ii3lHlqEdoMDr2I5jVLFFSv_J2Rg/256fx256f'\r\n//                     }}\r\n//                     style = {style.caseImage}\r\n//                 />\r\n//              </TouchableOpacity>\r\n//             <Button\r\n//                 disabled = {notFinished} // to prevent the button from being pressed before useEffect is finished\r\n//                 onPress = {() => props.navigation.navigate(\"Random Gun\", {gun: randomizer(PhoenixGuns)})}\r\n//                 title = 'Open Case'\r\n\r\n//             />\r\n//         </SafeAreaView>\r\n//     )\r\n// }"]},"metadata":{},"sourceType":"module"}