{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Repos\\\\csgoSimulator\\\\Screens\\\\Home.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { gunsList } from \"../Components/Guns\";\n\nvar Home = function Home(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      PhoenixGuns = _useState2[0],\n      setPhoenixGuns = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      notFinished = _useState4[0],\n      setNotFinished = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      keyboardDismiss = _useState6[0],\n      setKeyboardDismiss = _useState6[1];\n\n  useEffect(function () {\n    var searchGuns = function searchGuns() {\n      var url, search, guns;\n      return _regeneratorRuntime.async(function searchGuns$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = Platform.OS === 'web' ? 'https://cors-anywhere.herokuapp.com/http://csgobackpack.net/api/GetItemsList/v2/?prettyprint=true' : 'http://csgobackpack.net/api/GetItemsList/v2/?prettyprint=true';\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                return data.items_list;\n              }));\n\n            case 3:\n              search = _context.sent;\n              guns = keys();\n              guns.forEach(function (element) {\n                PhoenixGuns.push(search[element]);\n              });\n              setNotFinished(false);\n              Platform.OS === 'web' ? setKeyboardDismiss(true) : setKeyboardDismiss(false);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    searchGuns();\n  }, []);\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    style: {\n      flex: 1\n    },\n    disabled: keyboardDismiss,\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.navigation.navigate(\"Display Weapons\", {\n        guns: weaponsDisplayReturn(PhoenixGuns)\n      });\n    },\n    disabled: notFinished,\n    style: styles.viewCase,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: 'https://steamcommunity-a.akamaihd.net/economy/image/-9a81dlWLwJ2UUGcVs_nsVtzdOEdtWwKGZZLQHTxDZ7I56KU0Zwwo4NUX4oFJZEHLbXU5A1PIYQNqhpOSV-fRPasw8rsUFJ5KBFZv668FFUuh6qZJmlD7tiyl4OIlaGhYuLTzjhVupJ12urH89ii3lHlqEdoMDr2I5jVLFFSv_J2Rg/256fx256f'\n    },\n    style: styles.caseImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  })), React.createElement(TouchableOpacity, {\n    disabled: notFinished,\n    onPress: function onPress() {\n      return props.navigation.navigate(\"Random Gun\", {\n        gun: randomizer(PhoenixGuns)\n      });\n    },\n    style: styles.openCaseButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \"Open Case\")), React.createElement(Text, {\n    style: styles.loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, notFinished ? \"Case Contents Loading Please Wait...\" : \"\"))));\n};\n\nvar randomizer = function randomizer(guns) {\n  var chanceStatTrak = Math.random() * 100 + 1;\n  var gunRarityChance = Math.random() * 100 + 1;\n  var gunRarity = \"\";\n  var isStatTrack = false;\n  var listOfWeapons = [];\n\n  if (gunRarityChance < 79.92) {\n    gunRarity = 'Mil-Spec Grade';\n  } else if (gunRarityChance < 95.9) {\n    gunRarity = 'Restricted';\n  } else if (gunRarityChance < 99.1) {\n    gunRarity = 'Classified';\n  } else {\n    gunRarity = 'Covert';\n  }\n\n  if (chanceStatTrak < 10) {\n    isStatTrack = true;\n  }\n\n  guns.forEach(function (element) {\n    if (element.rarity === gunRarity && isStatTrack === element.name.includes('StatTrak')) {\n      listOfWeapons.push(element);\n    }\n  });\n  var randomGun = Math.floor(Math.random() * listOfWeapons.length);\n  return listOfWeapons[randomGun];\n};\n\nvar weaponsDisplayReturn = function weaponsDisplayReturn(guns) {\n  var index = [0, 8, 22, 32, 36, 44, 51, 76, 81, 90, 61, 93, 99, 114, 118];\n  var gunsDisplay = [];\n  index.forEach(function (element) {\n    gunsDisplay.push(guns[element]);\n  });\n  return gunsDisplay;\n};\n\nvar styles = StyleSheet.create({\n  caseImage: {\n    width: 225,\n    height: 225,\n    alignSelf: 'center'\n  },\n  container: {\n    backgroundColor: '#273c75',\n    flex: 1\n  },\n  openCaseButton: {\n    backgroundColor: '#192a56',\n    alignContent: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '5%',\n    marginHorizontal: 10,\n    borderRadius: 5,\n    height: '5%'\n  },\n  viewCase: {\n    borderRadius: 5,\n    marginHorizontal: 10,\n    height: '30%'\n  },\n  loading: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: 'white',\n    marginTop: 10,\n    textAlign: 'center'\n  }\n});\n\nvar keys = function keys() {\n  var x = gunsList;\n  return x;\n};\n\nexport default Home;","map":{"version":3,"sources":["F:/Repos/csgoSimulator/Screens/Home.js"],"names":["React","useState","useEffect","gunsList","Home","props","PhoenixGuns","setPhoenixGuns","notFinished","setNotFinished","keyboardDismiss","setKeyboardDismiss","searchGuns","url","Platform","OS","fetch","then","response","json","data","items_list","search","guns","keys","forEach","element","push","styles","container","flex","Keyboard","dismiss","navigation","navigate","weaponsDisplayReturn","viewCase","uri","caseImage","gun","randomizer","openCaseButton","color","loading","chanceStatTrak","Math","random","gunRarityChance","gunRarity","isStatTrack","listOfWeapons","rarity","name","includes","randomGun","floor","length","index","gunsDisplay","StyleSheet","create","width","height","alignSelf","backgroundColor","alignContent","alignItems","justifyContent","marginHorizontal","borderRadius","fontSize","fontWeight","marginTop","textAlign","x"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {SafeAreaView, TouchableOpacity ,Image, Button, StyleSheet, Platform, Text, View, Keyboard, TouchableWithoutFeedback} from 'react-native';\r\nimport {gunsList} from '../Components/Guns'\r\nconst Home = props => {\r\n    const [PhoenixGuns, setPhoenixGuns] = useState([]); // list of guns in Phoenix Case\r\n    const [notFinished, setNotFinished] = useState(true); // this is to ensure that the api call is finished before opening case\r\n    const [keyboardDismiss, setKeyboardDismiss] = useState(false);\r\n    useEffect(() => {\r\n        const searchGuns = async() => {\r\n            let url = Platform.OS === 'web' ? 'https://cors-anywhere.herokuapp.com/http://csgobackpack.net/api/GetItemsList/v2/?prettyprint=true' : 'http://csgobackpack.net/api/GetItemsList/v2/?prettyprint=true'\r\n            /*  **** VISIT THIS SITE TO GET TEMP ACCESS SO THAT WE ARE ABLE TO ACCESS CSGO BACKPACK: https://cors-anywhere.herokuapp.com/**** */\r\n            //https://cors-anywhere.herokuapp.com/http://csgobackpack.net/api/GetItemsList/v2/?prettyprint=true\r\n             let search = await fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => data.items_list)\r\n            let guns = keys() // all the keys for the guns\r\n            guns.forEach(element => {\r\n                PhoenixGuns.push(search[element])\r\n            });\r\n            setNotFinished(false);\r\n            Platform.OS === 'web' ? setKeyboardDismiss(true) : setKeyboardDismiss(false) \r\n        }\r\n        searchGuns()\r\n    },[]) // only run ONCE\r\n    return(\r\n        <SafeAreaView style = {styles.container}>\r\n            <TouchableWithoutFeedback style={{flex: 1}} disabled={keyboardDismiss} onPress={() => Keyboard.dismiss()}>\r\n                <View style={{flex:1}}>\r\n                    <TouchableOpacity // when the image is clicked display possible weapons\r\n                        onPress = {() => props.navigation.navigate(\"Display Weapons\", {guns: weaponsDisplayReturn(PhoenixGuns)})} // go to Display Weapons and transport over the weapons to display\r\n                        disabled = {notFinished}\r\n                        style={styles.viewCase}>\r\n                        <Image\r\n                            source = {{\r\n                                uri: 'https://steamcommunity-a.akamaihd.net/economy/image/-9a81dlWLwJ2UUGcVs_nsVtzdOEdtWwKGZZLQHTxDZ7I56KU0Zwwo4NUX4oFJZEHLbXU5A1PIYQNqhpOSV-fRPasw8rsUFJ5KBFZv668FFUuh6qZJmlD7tiyl4OIlaGhYuLTzjhVupJ12urH89ii3lHlqEdoMDr2I5jVLFFSv_J2Rg/256fx256f'\r\n                            }}\r\n                            style = {styles.caseImage}\r\n                        />\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        disabled = {notFinished} // to prevent the button from being pressed before useEffect is finished\r\n                        onPress = {() => props.navigation.navigate(\"Random Gun\", {gun: randomizer(PhoenixGuns)})}\r\n                        style={styles.openCaseButton}>\r\n                        <Text style={{color: 'white'}}>Open Case</Text>\r\n                    </TouchableOpacity>\r\n                    <Text style={styles.loading}>{notFinished ? \"Case Contents Loading Please Wait...\" : \"\"}</Text>\r\n                </View>\r\n            </TouchableWithoutFeedback>\r\n        </SafeAreaView>\r\n    )\r\n}\r\nconst randomizer = (guns) => {\r\n    let chanceStatTrak = (Math.random() * 100) + 1 // 1 to 100 if less than 10, is statTrak\r\n    let gunRarityChance = (Math.random() * 100) + 1\r\n    let gunRarity = \"\"\r\n    let isStatTrack = false\r\n    let listOfWeapons = []\r\n    if(gunRarityChance < 79.92) { // 79.92\r\n        gunRarity = 'Mil-Spec Grade'\r\n    }\r\n    else if (gunRarityChance < 95.9) { // 15.98\r\n        gunRarity = 'Restricted'\r\n    }\r\n    else if(gunRarityChance < 99.1) { // 3.2\r\n        gunRarity = 'Classified'\r\n    }\r\n    else {\r\n        gunRarity = 'Covert'\r\n    }\r\n    if(chanceStatTrak < 10) {\r\n        isStatTrack = true\r\n    }\r\n    guns.forEach(element => {\r\n        if(element.rarity === gunRarity && isStatTrack === element.name.includes('StatTrak')) { // if the rarity matches the name and isStatTracked\r\n            listOfWeapons.push(element)\r\n        }\r\n    });\r\n    let randomGun = Math.floor(Math.random() * listOfWeapons.length)\r\n    return listOfWeapons[randomGun]\r\n\r\n\r\n}\r\nconst weaponsDisplayReturn = (guns) => {\r\n    const index = [0,8,22,32,36,44,51,76,81,90,61,93,99,114,118] // all the indexs of guns list for display, 61 is in a odd place because of the rarity\r\n    let gunsDisplay = []; // this will contain the guns to display when clicking the image of the case \r\n    index.forEach(element => {\r\n        gunsDisplay.push(guns[element])\r\n    });\r\n    return gunsDisplay\r\n}\r\nconst styles = StyleSheet.create({\r\n    caseImage: {\r\n        width: 225,\r\n        height: 225,\r\n        alignSelf: 'center',\r\n    },\r\n    container: {\r\n        backgroundColor: '#273c75',\r\n        flex: 1\r\n    },\r\n    openCaseButton: {\r\n        backgroundColor: '#192a56',\r\n        alignContent: 'center',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '5%',\r\n        marginHorizontal: 10,\r\n        borderRadius: 5,\r\n        height: '5%',\r\n    },\r\n    viewCase: {\r\n        borderRadius: 5,\r\n        marginHorizontal: 10,\r\n        height: '30%',\r\n    },\r\n    loading: {\r\n        fontSize: 32,\r\n        fontWeight: 'bold',\r\n        color: 'white',\r\n        marginTop: 10,\r\n        textAlign: 'center'\r\n    }\r\n})\r\nconst keys = () => { // this was made because importing a text file doesnt work, libraries caused many problems **EDIT guns moved to seperate file**\r\nlet x = gunsList\r\n    return x;\r\n}\r\nexport default Home;\r\n//import PhoenixCaseGuns from '../Guns/PhoenixCaseGuns'"]},"metadata":{},"sourceType":"module"}